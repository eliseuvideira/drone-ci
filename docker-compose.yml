version: "3"

services:
  drone:
    image: drone/drone:2
    environment:
      - DRONE_GITEA_SERVER=${DRONE_GITEA_SERVER}
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - $DRONE_PORT:80
    restart: always
    volumes:
      - ./drone:/data

  drone-runner-docker:
    image: drone/drone-runner-docker:1
    depends_on:
      - drone
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone:80
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=drone-runner-docker
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_TRACE=${DRONE_DEBUG}
      - DRONE_RPC_DUMP_HTTP=${DRONE_DEBUG}
      - DRONE_RPC_DUMP_HTTP_BODY=${DRONE_DEBUG}
    logging:
      driver: json-file
      options:
        max-size: 10m
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  drone-runner-ssh:
    image: drone/drone-runner-ssh:1
    depends_on:
      - drone
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone:80
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_DEBUG=${DRONE_DEBUG}
      - DRONE_TRACE=${DRONE_DEBUG}
      - DRONE_RPC_DUMP_HTTP=${DRONE_DEBUG}
      - DRONE_RPC_DUMP_HTTP_BODY=${DRONE_DEBUG}
    logging:
      driver: json-file
      options:
        max-size: 10m
    restart: always
